<!DOCTYPE html>
<html lang="en">
  <head>
    <meta name="generator" content=
    "HTML Tidy for HTML5 for Balthisar Tidy on macOS, version 5.7.28">
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <title>
      CSIS 252 Assignment #1
    </title>
  </head>
  <body>
<h1>CSIS 252</h1>
<h2>Assignment #5</h2>
<h3>Due As Specified on the D2L Assignment Folder's Due Date</h3>
<p>The purpose of this program is the use of classes.&nbsp;</p>
<h3>Requirements:</h3>
<ul>
<li>A <i><b>makefile</b></i> will perform the compilation and linking to produce the executable <i><b>prog5</b></i></li>
<li>You must follow the new documentation requirements from now on.</li>
<li>Using classes. No structs or parallel arrays will be allowed. </li>
</ul>
<p>Following the directions in the handout on creating and handing in programs (note that your programs will go in the directory <b><i>lastname5</i></b>), write a C++ program on smaug as follows.</p>
<ul>
<li>Create a C++ program in the directory (<b><i>lastname5</i></b>). Some input is from the keyboard, some from the command-line argument(s), and some input is from a file. All output is to the screen. Be sure to use good programming practices as discussed in class (input prompts, labeling output, good identifier names, documentation, etc.).&nbsp; There is no error checking required for input, however, from a practical perspective, you will want to do just a little to make sure that your program doesn't get stuck as you test it.
<ol>
<li>Write the file <i><b>main</b></i><b><i>.cpp</i></b> and some additional files.</li>
<li>The additional files must include one .h and one .cpp and these will be for the header (class declaration) and implementation (definition of class methods) respectively.</li>
<li>The class that you will write will be to correspond to a unit of measure that you haven't worked with, but that a classmate has (not one of the units of measure that you used for one of your conversion programs, but a unit of measure that someone else used).</li>
<li>The main function will be a test driver, that will create instances of your class and call methods on them to test that they're working.</li>
<li>All methods of the class that you provide must be tested by your main function.</li>
<li>Your class must provide the following methods:
<ul>
<li>a default constructor, that sets the initial value to zero</li>
<li>a constructor that takes in a number (your choice of int, float, double, and so on) and sets the initial value to that</li>
<li>copy constructor </li>
<li>overloaded assignment operator </li>
<li>a way to set and get that value (the quantity of the unit)</li>
<li>comparisons between different instances of your class (just compares the values) (overloaded operators) </li>
<li>ways to input and output your unit (input reads in a number and a string and makes sure that the string matches the unit name or abbreviation, and output writes out the number and then a string that is either the unit name or plural or abbreviation) (overloaded and/or friend insertion and extraction operators)</li>
<li>ways to get the name of the unit (for example, returns a string "meter" if this is for meters), the abbreviation of the unit (for example, returns the string "m" if this is for meteres), and the plural of the name of the unit (for example, returns the string "meters" if this is for meters). Note that for unit names, support both American and British spellings. </li>
</ul>
</li>
</ol>
</li>
<li>Compile and execute your program removing any syntax and/or logic errors.</li>
<li>Clean up your directory (to prepare for handing it in), so that the only files in your directory are the following
<ul>
<li><i><b>main.cpp</b></i></li>
<li>whatever other .cpp or .h files you wrote (at least one of each, for sure - possibly more depending on how fancy the testing that your main function does - but I'm not expecting there to be more) </li>
<li>a README file that tells me anything else you want me to know about your program and how it works or doesn't work (the documentation standards say more about what should be in that file) </li>
</ul>
</li>
<li>compress your <i><b>lastname5</b></i> directory and hand it in to D2L according to the directions in the handout on creating and handing in programs.</li>
</ul>
<h3>Comments</h3>
<ul>
<li><b>NOTE</b>: I expect all file naming conventions to be followed <b>EXACTLY</b>. </li>
<li>You would be wise to re-read the assignment and the handout about how to hand things in to make sure you are following all naming conventions.</li>
</ul>
</body>
</html>